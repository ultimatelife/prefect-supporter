[tool.poetry]
name = "prefect-supporter"
version = "1.0.0"
description = "Prefect Supporter"
authors = ["Kunizno <pykunzino@gmail.com>"]
maintainers = [
    "Kunizno <pykunzino@gmail.com>",
]
license = "MIT"
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
readme = "README.md"
packages = [{ include = "prefect_supporter" }]
repository = "https://github.com/ultimatelife/prefect-supporter"
include = [{ path = "tests", format = "sdist" }]
keywords = ["prefect", "prefect-supporter"]


[tool.poetry.dependencies]
python = "^3.9"
prefect = "^2.11.5"
pydantic = "1.10.12"
httpx = "0.24.1"

[tool.poetry.group.test.dependencies]
pytest = "7.3.2"
pytest-cov = "4.1.0"
pytest-mock = "3.10.0"
pytest-randomly = "3.12"
pytest-xdist = { version = "^3.1", extras = ["psutil"] }

ruff = "^0.0.272"

[tool.poetry.group.typing.dependencies]
mypy = ">=1.0"
types-jsonschema = ">=4.9.0"
types-requests = ">=2.28.8"

# only used in github actions
[tool.poetry.group.github-actions]
optional = true

[tool.poetry.group.github-actions.dependencies]
pytest-github-actions-annotate-failures = "^0.1.7"


[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
unfixable = [
    "ERA", # do not autoremove commented out code
]
target-version = "py39"
line-length = 100
extend-select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I", # isort
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
]
ignore = [
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "N818", #  Exception name should be named with an Error suffix
]
extend-exclude = [
    "docs/*",
    # External to the project's coding standards
    "tests/**/fixtures/*",
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry"]
known-third-party = ["poetry.core"]
required-imports = ["from __future__ import annotations"]

[tool.black]
target-version = ['py39']
preview = true
force-exclude = '''
.*/setup\.py$
'''

[tool.mypy]
files = "prefect_supporter"
mypy_path = "prefect_supporter"
namespace_packages = true
explicit_package_bases = false
show_error_codes = true
strict = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
disable_error_code = [
#    "no-untyped-def"
]


[tool.pytest.ini_options]
testpaths = ["test"]

[tool.coverage.run]
branch = true
source = ["prefect_supporter"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]
